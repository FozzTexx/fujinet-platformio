%PDF-1.4
1 0 obj <</Type /Catalog /Pages 2 0 R>> endobj
2 0 obj <</Type /Pages /Kids [3 0 R] /Count 1>> endobj
3 0 obj <</Type /Page /Parent 2 0 R /Resources 4 0 R /MediaBox [0 0 672 792] /Contents [ 6 0 R 7 0 R 8 0 R 9 0 R 10 0 R 11 0 R 12 0 R 13 0 R 14 0 R 15 0 R 16 0 R 17 0 R 18 0 R 19 0 R 20 0 R 21 0 R 22 0 R 23 0 R 24 0 R 25 0 R 26 0 R 27 0 R 28 0 R 29 0 R 30 0 R 31 0 R 32 0 R 33 0 R 34 0 R 35 0 R 36 0 R 37 0 R 38 0 R 39 0 R 40 0 R 41 0 R 42 0 R 43 0 R 44 0 R 45 0 R 46 0 R 47 0 R 48 0 R 49 0 R 50 0 R 51 0 R 52 0 R 53 0 R 54 0 R 55 0 R 56 0 R 57 0 R 58 0 R 59 0 R 60 0 R 61 0 R 62 0 R 63 0 R 64 0 R 65 0 R 66 0 R 67 0 R 68 0 R 69 0 R 70 0 R 71 0 R ]>> endobj
4 0 obj <</Font <</F1 5 0 R>>>> endobj
5 0 obj <</Type /Font /Subtype /Type1 /BaseFont /Courier>> endobj
6 0 obj <</Length 30>> stream
BT /F1 12 Tf 18 782 Td ()Tj ET
endstream endobj
7 0 obj <</Length 62>> stream
BT /F1 12 Tf 18 770 Td (ANTIC VOL. 1, NO. 1 / APRIL 1982)Tj ET
endstream endobj
8 0 obj <</Length 56>> stream
BT /F1 12 Tf 18 758 Td (ASSEMBLER/EDITOR CARTRIDGE)Tj ET
endstream endobj
9 0 obj <</Length 49>> stream
BT /F1 12 Tf 18 746 Td (Tricks Of The Trade)Tj ET
endstream endobj
10 0 obj <</Length 48>> stream
BT /F1 12 Tf 18 734 Td (by James Capparell)Tj ET
endstream endobj
11 0 obj <</Length 30>> stream
BT /F1 12 Tf 18 722 Td ()Tj ET
endstream endobj
12 0 obj <</Length 107>> stream
BT /F1 12 Tf 18 710 Td (Do you often wonder how some of the incredible graphics were achieved in your)Tj ET
endstream endobj
13 0 obj <</Length 107>> stream
BT /F1 12 Tf 18 698 Td (favorite program. Looking at someone else's program is an excellent method of)Tj ET
endstream endobj
14 0 obj <</Length 100>> stream
BT /F1 12 Tf 18 686 Td (self-instruction. The problem is that often we only have the assembled)Tj ET
endstream endobj
15 0 obj <</Length 105>> stream
BT /F1 12 Tf 18 674 Td ((object) code in our possession. The L option of the A/E cartridge makes it)Tj ET
endstream endobj
16 0 obj <</Length 101>> stream
BT /F1 12 Tf 18 662 Td (possible to recreate source code from the object code. This is a useful)Tj ET
endstream endobj
17 0 obj <</Length 105>> stream
BT /F1 12 Tf 18 650 Td (feature. The catch is the inability to save the output of the L function to)Tj ET
endstream endobj
18 0 obj <</Length 101>> stream
BT /F1 12 Tf 18 638 Td (disk. Follow these simple instructions and you will be able to save the)Tj ET
endstream endobj
19 0 obj <</Length 58>> stream
BT /F1 12 Tf 18 626 Td (disassembled output to disk.)Tj ET
endstream endobj
20 0 obj <</Length 30>> stream
BT /F1 12 Tf 18 614 Td ()Tj ET
endstream endobj
21 0 obj <</Length 105>> stream
BT /F1 12 Tf 18 602 Td (1. Load the object code to be disassembled. Unnecessary if you are dealing )Tj ET
endstream endobj
22 0 obj <</Length 47>> stream
BT /F1 12 Tf 18 590 Td (   with ROM code.)Tj ET
endstream endobj
23 0 obj <</Length 30>> stream
BT /F1 12 Tf 18 578 Td ()Tj ET
endstream endobj
24 0 obj <</Length 104>> stream
BT /F1 12 Tf 18 566 Td (2. Note the first memory address (hex) where the disassembly process is to)Tj ET
endstream endobj
25 0 obj <</Length 39>> stream
BT /F1 12 Tf 18 554 Td (   begin.)Tj ET
endstream endobj
26 0 obj <</Length 30>> stream
BT /F1 12 Tf 18 542 Td ()Tj ET
endstream endobj
27 0 obj <</Length 95>> stream
BT /F1 12 Tf 18 530 Td (3. Enter the debug mode of A/E by typing BUG and pressing return.)Tj ET
endstream endobj
28 0 obj <</Length 30>> stream
BT /F1 12 Tf 18 518 Td ()Tj ET
endstream endobj
29 0 obj <</Length 108>> stream
BT /F1 12 Tf 18 506 Td (4. Start the disassembly process at the hex address noted in step 2. Enter the)Tj ET
endstream endobj
30 0 obj <</Length 101>> stream
BT /F1 12 Tf 18 494 Td (   L command followed by the hex address and press return. This command)Tj ET
endstream endobj
31 0 obj <</Length 100>> stream
BT /F1 12 Tf 18 482 Td (   disassembles 20 lines of code and displays the results on your T.V.)Tj ET
endstream endobj
32 0 obj <</Length 91>> stream
BT /F1 12 Tf 18 470 Td (   (IMPORTANT--Note the last address printed on your screen).)Tj ET
endstream endobj
33 0 obj <</Length 30>> stream
BT /F1 12 Tf 18 458 Td ()Tj ET
endstream endobj
34 0 obj <</Length 105>> stream
BT /F1 12 Tf 18 446 Td (5. Move the cursor to first line on screen using control and arrow keys and)Tj ET
endstream endobj
35 0 obj <</Length 86>> stream
BT /F1 12 Tf 18 434 Td (   insert 2 blank lines using the shift and insert keys.)Tj ET
endstream endobj
36 0 obj <</Length 30>> stream
BT /F1 12 Tf 18 422 Td ()Tj ET
endstream endobj
37 0 obj <</Length 105>> stream
BT /F1 12 Tf 18 410 Td (6. Return to the Edit mode by typing X and pressing return. The screen will)Tj ET
endstream endobj
38 0 obj <</Length 71>> stream
BT /F1 12 Tf 18 398 Td (   still display the disassembled output.)Tj ET
endstream endobj
39 0 obj <</Length 30>> stream
BT /F1 12 Tf 18 386 Td ()Tj ET
endstream endobj
40 0 obj <</Length 106>> stream
BT /F1 12 Tf 18 374 Td (7. Again move the cursor to the first line on the screen and enter Auto line)Tj ET
endstream endobj
41 0 obj <</Length 106>> stream
BT /F1 12 Tf 18 362 Td (   numbering mode by typing NUM, press return. This will cause the cursor to)Tj ET
endstream endobj
42 0 obj <</Length 101>> stream
BT /F1 12 Tf 18 350 Td (   print out the number 10 if this is the first time the auto numbering)Tj ET
endstream endobj
43 0 obj <</Length 104>> stream
BT /F1 12 Tf 18 338 Td (   command has been executed or the next number incremented by 10. It will)Tj ET
endstream endobj
44 0 obj <</Length 103>> stream
BT /F1 12 Tf 18 326 Td (   also place the number and the cursor at the start of the first line of)Tj ET
endstream endobj
45 0 obj <</Length 51>> stream
BT /F1 12 Tf 18 314 Td (   disassembled code.)Tj ET
endstream endobj
46 0 obj <</Length 30>> stream
BT /F1 12 Tf 18 302 Td ()Tj ET
endstream endobj
47 0 obj <</Length 104>> stream
BT /F1 12 Tf 18 290 Td (8. Using the control and delete key delete all characters up to two spaces)Tj ET
endstream endobj
48 0 obj <</Length 105>> stream
BT /F1 12 Tf 18 278 Td (   prior to the assembly language mnemonic. The two spaces are necessary to)Tj ET
endstream endobj
49 0 obj <</Length 69>> stream
BT /F1 12 Tf 18 266 Td (   conform to A/E spacing requirements.)Tj ET
endstream endobj
50 0 obj <</Length 30>> stream
BT /F1 12 Tf 18 254 Td ()Tj ET
endstream endobj
51 0 obj <</Length 104>> stream
BT /F1 12 Tf 18 242 Td (9. Press return to enter this line of code into the source file. This will)Tj ET
endstream endobj
52 0 obj <</Length 102>> stream
BT /F1 12 Tf 18 230 Td (   also generate the next line number incremented by 10. The cursor will)Tj ET
endstream endobj
53 0 obj <</Length 74>> stream
BT /F1 12 Tf 18 218 Td (   appear at the beginning of the next line.)Tj ET
endstream endobj
54 0 obj <</Length 30>> stream
BT /F1 12 Tf 18 206 Td ()Tj ET
endstream endobj
55 0 obj <</Length 109>> stream
BT /F1 12 Tf 18 194 Td (10. Continue with all 20 lines. When done, if you have more code to disassemble)Tj ET
endstream endobj
56 0 obj <</Length 107>> stream
BT /F1 12 Tf 18 182 Td (    return to step 3. This can go on indefinitely or until source buffers are)Tj ET
endstream endobj
57 0 obj <</Length 105>> stream
BT /F1 12 Tf 18 170 Td (    full at which time you will need to save the source file. The auto line)Tj ET
endstream endobj
58 0 obj <</Length 106>> stream
BT /F1 12 Tf 18 158 Td (    numbering remembers the last line number and will correctly generate the)Tj ET
endstream endobj
59 0 obj <</Length 108>> stream
BT /F1 12 Tf 18 146 Td (    proper sequences between 20 line chunks. This technique can be useful when)Tj ET
endstream endobj
60 0 obj <</Length 107>> stream
BT /F1 12 Tf 18 134 Td (    you're trying to decipher code. Labels can be added in place of addresses)Tj ET
endstream endobj
61 0 obj <</Length 103>> stream
BT /F1 12 Tf 18 122 Td (    in the operand fields and the corresponding label fields. This entire)Tj ET
endstream endobj
62 0 obj <</Length 109>> stream
BT /F1 12 Tf 18 110 Td (    process is called unassembling object code. It can be very useful when used)Tj ET
endstream endobj
63 0 obj <</Length 55>> stream
BT /F1 12 Tf 18  98 Td (    on small subroutines.)Tj ET
endstream endobj
64 0 obj <</Length 30>> stream
BT /F1 12 Tf 18  86 Td ()Tj ET
endstream endobj
65 0 obj <</Length 103>> stream
BT /F1 12 Tf 18  74 Td (Note: This same process also works on EDASM, Optimized Systems Software's)Tj ET
endstream endobj
66 0 obj <</Length 53>> stream
BT /F1 12 Tf 18  62 Td (      assembler/editor.)Tj ET
endstream endobj
67 0 obj <</Length 30>> stream
BT /F1 12 Tf 18  50 Td ()Tj ET
endstream endobj
68 0 obj <</Length 30>> stream
BT /F1 12 Tf 18  38 Td ()Tj ET
endstream endobj
69 0 obj <</Length 92>> stream
BT /F1 12 Tf 18  26 Td (https://www.atarimagazines.com/v1n1/assemblereditortricks.html)Tj ET
endstream endobj
70 0 obj <</Length 30>> stream
BT /F1 12 Tf 18  14 Td ()Tj ET
endstream endobj
71 0 obj <</Length 30>> stream
BT /F1 12 Tf 18   2 Td ()Tj ET
endstream endobj
xref
0 71
0000000000 65535 f
0000000009 00000 n
0000000056 00000 n
0000000111 00000 n
0000000669 00000 n
0000000708 00000 n
0000000774 00000 n
0000000852 00000 n
0000000962 00000 n
0000001066 00000 n
0000001163 00000 n
0000001260 00000 n
0000001339 00000 n
0000001496 00000 n
0000001653 00000 n
0000001803 00000 n
0000001958 00000 n
0000002109 00000 n
0000002264 00000 n
0000002415 00000 n
0000002522 00000 n
0000002601 00000 n
0000002756 00000 n
0000002852 00000 n
0000002931 00000 n
0000003085 00000 n
0000003173 00000 n
0000003252 00000 n
0000003396 00000 n
0000003475 00000 n
0000003633 00000 n
0000003784 00000 n
0000003934 00000 n
0000004074 00000 n
0000004153 00000 n
0000004308 00000 n
0000004443 00000 n
0000004522 00000 n
0000004677 00000 n
0000004797 00000 n
0000004876 00000 n
0000005032 00000 n
0000005188 00000 n
0000005339 00000 n
0000005493 00000 n
0000005646 00000 n
0000005746 00000 n
0000005825 00000 n
0000005979 00000 n
0000006134 00000 n
0000006252 00000 n
0000006331 00000 n
0000006485 00000 n
0000006637 00000 n
0000006760 00000 n
0000006839 00000 n
0000006998 00000 n
0000007155 00000 n
0000007310 00000 n
0000007466 00000 n
0000007624 00000 n
0000007781 00000 n
0000007934 00000 n
0000008093 00000 n
0000008197 00000 n
0000008276 00000 n
0000008429 00000 n
0000008531 00000 n
0000008610 00000 n
0000008689 00000 n
0000008830 00000 n
trailer <</Size 71/Root 1 0 R>>
startxref
8988
%%EOF
