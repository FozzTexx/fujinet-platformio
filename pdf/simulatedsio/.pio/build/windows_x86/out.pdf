%PDF-1.4
1 0 obj <</Type /Catalog /Pages 2 0 R>> endobj
2 0 obj <</Type /Pages /Kids [3 0 R] /Count 1>> endobj
3 0 obj <</Type /Page /Parent 2 0 R /Resources 4 0 R /MediaBox [0 0 320 792] /Contents [ 6 0 R 7 0 R 8 0 R 9 0 R 10 0 R 11 0 R 12 0 R 13 0 R 14 0 R 15 0 R 16 0 R 17 0 R 18 0 R 19 0 R 20 0 R 21 0 R 22 0 R 23 0 R 24 0 R 25 0 R 26 0 R 27 0 R 28 0 R 29 0 R 30 0 R 31 0 R 32 0 R 33 0 R 34 0 R 35 0 R 36 0 R 37 0 R 38 0 R 39 0 R 40 0 R 41 0 R 42 0 R 43 0 R 44 0 R 45 0 R 46 0 R 47 0 R 48 0 R 49 0 R 50 0 R 51 0 R 52 0 R 53 0 R 54 0 R 55 0 R 56 0 R 57 0 R 58 0 R 59 0 R 60 0 R 61 0 R 62 0 R 63 0 R 64 0 R 65 0 R 66 0 R 67 0 R 68 0 R 69 0 R 70 0 R 71 0 R ]>> endobj
4 0 obj <</Font <</F1 5 0 R>>>> endobj
5 0 obj <</Type /Font /Subtype /Type1 /BaseFont /Courier>> endobj
6 0 obj <</Length 31>> stream
BT /F1 12 Tf 016 782 Td ()Tj ET
endstream endobj
7 0 obj <</Length 63>> stream
BT /F1 12 Tf 016 770 Td (ANTIC VOL. 1, NO. 1 / APRIL 1982)Tj ET
endstream endobj
8 0 obj <</Length 57>> stream
BT /F1 12 Tf 016 758 Td (ASSEMBLER/EDITOR CARTRIDGE)Tj ET
endstream endobj
9 0 obj <</Length 50>> stream
BT /F1 12 Tf 016 746 Td (Tricks Of The Trade)Tj ET
endstream endobj
10 0 obj <</Length 49>> stream
BT /F1 12 Tf 016 734 Td (by James Capparell)Tj ET
endstream endobj
11 0 obj <</Length 31>> stream
BT /F1 12 Tf 016 722 Td ()Tj ET
endstream endobj
12 0 obj <</Length 108>> stream
BT /F1 12 Tf 016 710 Td (Do you often wonder how some of the incredible graphics were achieved in your)Tj ET
endstream endobj
13 0 obj <</Length 108>> stream
BT /F1 12 Tf 016 698 Td (favorite program. Looking at someone else's program is an excellent method of)Tj ET
endstream endobj
14 0 obj <</Length 101>> stream
BT /F1 12 Tf 016 686 Td (self-instruction. The problem is that often we only have the assembled)Tj ET
endstream endobj
15 0 obj <</Length 106>> stream
BT /F1 12 Tf 016 674 Td ((object) code in our possession. The L option of the A/E cartridge makes it)Tj ET
endstream endobj
16 0 obj <</Length 102>> stream
BT /F1 12 Tf 016 662 Td (possible to recreate source code from the object code. This is a useful)Tj ET
endstream endobj
17 0 obj <</Length 106>> stream
BT /F1 12 Tf 016 650 Td (feature. The catch is the inability to save the output of the L function to)Tj ET
endstream endobj
18 0 obj <</Length 102>> stream
BT /F1 12 Tf 016 638 Td (disk. Follow these simple instructions and you will be able to save the)Tj ET
endstream endobj
19 0 obj <</Length 59>> stream
BT /F1 12 Tf 016 626 Td (disassembled output to disk.)Tj ET
endstream endobj
20 0 obj <</Length 31>> stream
BT /F1 12 Tf 016 614 Td ()Tj ET
endstream endobj
21 0 obj <</Length 106>> stream
BT /F1 12 Tf 016 602 Td (1. Load the object code to be disassembled. Unnecessary if you are dealing )Tj ET
endstream endobj
22 0 obj <</Length 48>> stream
BT /F1 12 Tf 016 590 Td (   with ROM code.)Tj ET
endstream endobj
23 0 obj <</Length 31>> stream
BT /F1 12 Tf 016 578 Td ()Tj ET
endstream endobj
24 0 obj <</Length 105>> stream
BT /F1 12 Tf 016 566 Td (2. Note the first memory address (hex) where the disassembly process is to)Tj ET
endstream endobj
25 0 obj <</Length 40>> stream
BT /F1 12 Tf 016 554 Td (   begin.)Tj ET
endstream endobj
26 0 obj <</Length 31>> stream
BT /F1 12 Tf 016 542 Td ()Tj ET
endstream endobj
27 0 obj <</Length 96>> stream
BT /F1 12 Tf 016 530 Td (3. Enter the debug mode of A/E by typing BUG and pressing return.)Tj ET
endstream endobj
28 0 obj <</Length 31>> stream
BT /F1 12 Tf 016 518 Td ()Tj ET
endstream endobj
29 0 obj <</Length 109>> stream
BT /F1 12 Tf 016 506 Td (4. Start the disassembly process at the hex address noted in step 2. Enter the)Tj ET
endstream endobj
30 0 obj <</Length 102>> stream
BT /F1 12 Tf 016 494 Td (   L command followed by the hex address and press return. This command)Tj ET
endstream endobj
31 0 obj <</Length 101>> stream
BT /F1 12 Tf 016 482 Td (   disassembles 20 lines of code and displays the results on your T.V.)Tj ET
endstream endobj
32 0 obj <</Length 92>> stream
BT /F1 12 Tf 016 470 Td (   (IMPORTANT--Note the last address printed on your screen).)Tj ET
endstream endobj
33 0 obj <</Length 31>> stream
BT /F1 12 Tf 016 458 Td ()Tj ET
endstream endobj
34 0 obj <</Length 106>> stream
BT /F1 12 Tf 016 446 Td (5. Move the cursor to first line on screen using control and arrow keys and)Tj ET
endstream endobj
35 0 obj <</Length 87>> stream
BT /F1 12 Tf 016 434 Td (   insert 2 blank lines using the shift and insert keys.)Tj ET
endstream endobj
36 0 obj <</Length 31>> stream
BT /F1 12 Tf 016 422 Td ()Tj ET
endstream endobj
37 0 obj <</Length 106>> stream
BT /F1 12 Tf 016 410 Td (6. Return to the Edit mode by typing X and pressing return. The screen will)Tj ET
endstream endobj
38 0 obj <</Length 72>> stream
BT /F1 12 Tf 016 398 Td (   still display the disassembled output.)Tj ET
endstream endobj
39 0 obj <</Length 31>> stream
BT /F1 12 Tf 016 386 Td ()Tj ET
endstream endobj
40 0 obj <</Length 107>> stream
BT /F1 12 Tf 016 374 Td (7. Again move the cursor to the first line on the screen and enter Auto line)Tj ET
endstream endobj
41 0 obj <</Length 107>> stream
BT /F1 12 Tf 016 362 Td (   numbering mode by typing NUM, press return. This will cause the cursor to)Tj ET
endstream endobj
42 0 obj <</Length 102>> stream
BT /F1 12 Tf 016 350 Td (   print out the number 10 if this is the first time the auto numbering)Tj ET
endstream endobj
43 0 obj <</Length 105>> stream
BT /F1 12 Tf 016 338 Td (   command has been executed or the next number incremented by 10. It will)Tj ET
endstream endobj
44 0 obj <</Length 104>> stream
BT /F1 12 Tf 016 326 Td (   also place the number and the cursor at the start of the first line of)Tj ET
endstream endobj
45 0 obj <</Length 52>> stream
BT /F1 12 Tf 016 314 Td (   disassembled code.)Tj ET
endstream endobj
46 0 obj <</Length 31>> stream
BT /F1 12 Tf 016 302 Td ()Tj ET
endstream endobj
47 0 obj <</Length 105>> stream
BT /F1 12 Tf 016 290 Td (8. Using the control and delete key delete all characters up to two spaces)Tj ET
endstream endobj
48 0 obj <</Length 106>> stream
BT /F1 12 Tf 016 278 Td (   prior to the assembly language mnemonic. The two spaces are necessary to)Tj ET
endstream endobj
49 0 obj <</Length 70>> stream
BT /F1 12 Tf 016 266 Td (   conform to A/E spacing requirements.)Tj ET
endstream endobj
50 0 obj <</Length 31>> stream
BT /F1 12 Tf 016 254 Td ()Tj ET
endstream endobj
51 0 obj <</Length 105>> stream
BT /F1 12 Tf 016 242 Td (9. Press return to enter this line of code into the source file. This will)Tj ET
endstream endobj
52 0 obj <</Length 103>> stream
BT /F1 12 Tf 016 230 Td (   also generate the next line number incremented by 10. The cursor will)Tj ET
endstream endobj
53 0 obj <</Length 75>> stream
BT /F1 12 Tf 016 218 Td (   appear at the beginning of the next line.)Tj ET
endstream endobj
54 0 obj <</Length 31>> stream
BT /F1 12 Tf 016 206 Td ()Tj ET
endstream endobj
55 0 obj <</Length 110>> stream
BT /F1 12 Tf 016 194 Td (10. Continue with all 20 lines. When done, if you have more code to disassemble)Tj ET
endstream endobj
56 0 obj <</Length 108>> stream
BT /F1 12 Tf 016 182 Td (    return to step 3. This can go on indefinitely or until source buffers are)Tj ET
endstream endobj
57 0 obj <</Length 106>> stream
BT /F1 12 Tf 016 170 Td (    full at which time you will need to save the source file. The auto line)Tj ET
endstream endobj
58 0 obj <</Length 107>> stream
BT /F1 12 Tf 016 158 Td (    numbering remembers the last line number and will correctly generate the)Tj ET
endstream endobj
59 0 obj <</Length 109>> stream
BT /F1 12 Tf 016 146 Td (    proper sequences between 20 line chunks. This technique can be useful when)Tj ET
endstream endobj
60 0 obj <</Length 108>> stream
BT /F1 12 Tf 016 134 Td (    you're trying to decipher code. Labels can be added in place of addresses)Tj ET
endstream endobj
61 0 obj <</Length 104>> stream
BT /F1 12 Tf 016 122 Td (    in the operand fields and the corresponding label fields. This entire)Tj ET
endstream endobj
62 0 obj <</Length 110>> stream
BT /F1 12 Tf 016 110 Td (    process is called unassembling object code. It can be very useful when used)Tj ET
endstream endobj
63 0 obj <</Length 56>> stream
BT /F1 12 Tf 016 98 Td (    on small subroutines.)Tj ET
endstream endobj
64 0 obj <</Length 31>> stream
BT /F1 12 Tf 016 86 Td ()Tj ET
endstream endobj
65 0 obj <</Length 104>> stream
BT /F1 12 Tf 016 74 Td (Note: This same process also works on EDASM, Optimized Systems Software's)Tj ET
endstream endobj
66 0 obj <</Length 54>> stream
BT /F1 12 Tf 016 62 Td (      assembler/editor.)Tj ET
endstream endobj
67 0 obj <</Length 31>> stream
BT /F1 12 Tf 016 50 Td ()Tj ET
endstream endobj
68 0 obj <</Length 31>> stream
BT /F1 12 Tf 016 38 Td ()Tj ET
endstream endobj
69 0 obj <</Length 93>> stream
BT /F1 12 Tf 016 26 Td (https://www.atarimagazines.com/v1n1/assemblereditortricks.html)Tj ET
endstream endobj
70 0 obj <</Length 31>> stream
BT /F1 12 Tf 016 14 Td ()Tj ET
endstream endobj
71 0 obj <</Length 31>> stream
BT /F1 12 Tf 016 2 Td ()Tj ET
endstream endobj
xref
0 72
0000000000 65535 f
0000000009 00000 n
0000000056 00000 n
0000000111 00000 n
0000000669 00000 n
0000000708 00000 n
0000000774 00000 n
0000000853 00000 n
0000000964 00000 n
0000001069 00000 n
0000001167 00000 n
0000001265 00000 n
0000001345 00000 n
0000001503 00000 n
0000001661 00000 n
0000001812 00000 n
0000001968 00000 n
0000002120 00000 n
0000002276 00000 n
0000002428 00000 n
0000002536 00000 n
0000002616 00000 n
0000002772 00000 n
0000002869 00000 n
0000002949 00000 n
0000003104 00000 n
0000003193 00000 n
0000003273 00000 n
0000003418 00000 n
0000003498 00000 n
0000003657 00000 n
0000003809 00000 n
0000003960 00000 n
0000004101 00000 n
0000004181 00000 n
0000004337 00000 n
0000004473 00000 n
0000004553 00000 n
0000004709 00000 n
0000004830 00000 n
0000004910 00000 n
0000005067 00000 n
0000005224 00000 n
0000005376 00000 n
0000005531 00000 n
0000005685 00000 n
0000005786 00000 n
0000005866 00000 n
0000006021 00000 n
0000006177 00000 n
0000006296 00000 n
0000006376 00000 n
0000006531 00000 n
0000006684 00000 n
0000006808 00000 n
0000006888 00000 n
0000007048 00000 n
0000007206 00000 n
0000007362 00000 n
0000007519 00000 n
0000007678 00000 n
0000007836 00000 n
0000007990 00000 n
0000008150 00000 n
0000008254 00000 n
0000008333 00000 n
0000008486 00000 n
0000008588 00000 n
0000008667 00000 n
0000008746 00000 n
0000008887 00000 n
trailer <</Size 72/Root 1 0 R>>
startxref
9044
%%EOF
