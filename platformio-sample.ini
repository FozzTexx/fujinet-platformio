;FujiNet PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[fujinet]
; Espressif32 PlatformIO Version to use for building
esp32_platform_version = 3.4.0
;esp32_platform_version = 3.2.0 ; For Bluetooth support

; Uncomment the platform, bus and board type you are building for below
;build_platform = BUILD_ATARI
;build_bus      = SIO
;build_board    = fujinet-atari-v1       ; FujiNet for Atari v1.0 and up
;build_board    = fujinet-v1-8mb         ; Atari generic/custom with 8mb flash
;build_board    = fujinet-v1-4mb         ; Atari generic/custom with 4mb flash

;build_platform = BUILD_ADAM
;build_bus      = ADAMNET
;build_board    = fujinet-adam-v1       ; FujiNet for Coleco ADAM v1.0

;build_platform = BUILD_APPLE
;build_bus      = IWM
;build_board    = fujiapple-rev0         ; FujiApple Rev 0 Prototype
;build_board    = fujiapple-fujinetv1   ; FujiApple using Atari FujiNet v1.0

;build_platform = BUILD_CBM
;build_bus      = IEC
;build_board    = fujinet-cbm            ; Commodore IEC using Atari FujiNet

;build_platform = BUILD_LYNX
;build_bus      = comlynx
;build_board    = fujinet-lynx-prototype ; Lynx Prototype PCB
;build_board    = fujinet-lynx-devkitc   ; Lynx with basic DEVKITC

;build_platform = BUILD_S100
;build_bus      = s100Bus
;build_board    = fujinet-v1-8mb         ; ESP32-DEVKITC-VE

;build_platform = BUILD_RS232
;build_bus      = rs232
;build_board    = fujinet-rs232-rev0      ; RS232 Rev0 Prototype Carrier

[platformio]
description = FujiNet retro computer to ESP32 WiFi Multifunction Firmware
default_envs = ${fujinet.build_board}
data_dir = $PROJECT_DIR/data/${fujinet.build_platform}

[env]
; Common settings for all enivornments
framework = espidf
extra_scripts = pre:build_version.py
lib_ldf_mode = deep+
upload_speed = 921600
;upload_port = COM1 ; Windows
upload_port = /dev/ttyUSB0 ; Linux
;upload_port = /dev/tty.SLAB_USBtoUART ; Mac
monitor_speed = 921600
;monitor_port = COM1 ; Windows
monitor_port = /dev/ttyUSB0 ; Linux
;monitor_port = /dev/tty.SLAB_USBtoUART ; Mac
monitor_filters = time, esp32_exception_decoder ;,log2file

build_flags =
    -D ${fujinet.build_platform}
    -D CMAKE_EXPORT_COMPILE_COMMANDS=ON
    -D DEBUG_SPEED=921600
    ;-D NO_BUTTONS          ; if your hardware has no physical buttons
    ;-D JTAG                ; enable use with JTAG debugger
    ;-D BLUETOOTH_SUPPORT   ; enable BlueTooth support
    ;-D VERBOSE_TNFS        ;
    ;-D VERBOSE_DISK        ;
    ;-D VERBOSE_HTTP        ;
    ;-D DBUG2               ; enable monitor messages for a release build

; FujiNet for Atari v1.0 and up (ESP32 WROVER 16MB Flash, 8MB PSRAM)
[env:fujinet-atari-v1]
platform = espressif32@${fujinet.esp32_platform_version}
board = fujinet-v1
build_type = debug
build_flags =
    ${env.build_flags}
    -D PINMAP_ATARIV1
    ;-D DEBUG_UDPSTREAM     ; enable UDP to display IN/OUT packets
    ;-D VERBOSE_SIO         ; Debug SIO
    ;-D VERBOSE_ATX         ; Debug ATX files
    ;-D FN_HISPEED_INDEX=0  ; Set SIO High Speed Index

; FujiNet for Coleco ADAM v1.0 (ESP32-DEVKITC-VE 8MB Flash, 8MB PSRAM)
[env:fujinet-adam-v1]
platform = espressif32@${fujinet.esp32_platform_version}
board = fujinet-v1-8mb
build_type = debug
build_flags =
    ${env.build_flags}
    -D PINMAP_ADAMV1
    ;-D NO_VIRTUAL_KEYBOARD ; disable virtual keyboard

; FujiApple Rev 0 Prototype (ESP32-DEVKITC-VE 8MB Flash, 8MB PSRAM)
[env:fujiapple-rev0]
platform = espressif32@${fujinet.esp32_platform_version}
board = fujinet-v1-8mb
build_type = release
build_flags =
    ${env.build_flags}
    -D PINMAP_A2_REV0
    -D DBUG2 ; enable monitor messages for a release build
    ;-D EXTRA ; enable DRIVE2 pin as extra debugging signal for logic analyzer

; FujiNet for Atari Lynx (ESP32-WROVER 16MB Flash, 8MB PSRAM)
[env:fujinet-lynx-prototype]
platform = espressif32@${fujinet.esp32_platform_version}
board = fujinet-v1
build_type = debug
build_flags =
    ${env.build_flags}
    -D PINMAP_LYNX
    ;-D DEBUG_UDPSTREAM ; enable UDP to display IN/OUT packets
    ;-D DEBUG_8BITHUB ; debug messages for 8 Bit Hub emulation

; FujiNet for Atari Lynx (ESP32-DEVKITC-VE 8MB Flash, 8MB PSRAM)
[env:fujinet-lynx-devkitc]
platform = espressif32@${fujinet.esp32_platform_version}
board = fujinet-v1-8mb
build_type = debug
build_flags =
    ${env.build_flags}
    -D PINMAP_LYNX
    -D NO_BUTTONS
    ;-D DEBUG_UDPSTREAM ; enable UDP to display IN/OUT packets
    ;-D DEBUG_8BITHUB ; debug messages for 8 Bit Hub emulation

; Commodore IEC using Atari FujiNet Hardware (ESP32 WROVER 16MB Flash, 8MB PSRAM)
[env:fujinet-cbm]
platform = espressif32@${fujinet.esp32_platform_version}
board = fujinet-v1
build_type = debug
build_flags =
    ${env.build_flags}
    -D PINMAP_CBM
    ;-D DEBUG_TIMING        ; IEC Timing
    ;-D DATA_STREAM

; FujiNet RS232 Rev 0 Prototype (ESP32-DEVKITC-VE 8MB Flash, 8MB PSRAM)
[env:fujinet-rs232-rev0]
platform = espressif32@${fujinet.esp32_platform_version}
board = fujinet-v1-8mb
build_type = debug
build_flags =
    ${env.build_flags}
    -D PINMAP_RS232_REV0

; ESP32 WROVER (16MB Flash, 8MB PSRAM) based FujiNet
[env:fujinet-v1]
platform = espressif32@${fujinet.esp32_platform_version}
board = fujinet-v1
build_type = debug
build_flags =
    ${env.build_flags}
    -D ${fujinet.build_platform}
    -D PINMAP_ATARIV1

; ESP32 WROVER (8MB Flash, 8MB PSRAM) based FujiNet
[env:fujinet-v1-8mb]
platform = espressif32@${fujinet.esp32_platform_version}
board = fujinet-v1-8mb
build_type = debug
build_flags =
    ${env.build_flags}
    -D PINMAP_ATARIV1

; ESP32 WROVER (4MB Flash, 8MB PSRAM) based FujiNet
[env:fujinet-v1-4mb]
platform = espressif32@${fujinet.esp32_platform_version}
board = fujinet-v1-4mb
build_type = debug
build_flags =
    ${env.build_flags}
    -D PINMAP_ATARIV1

[env:esp32s3]
platform = https://github.com/jonathandreyer/platform-espressif32.git#espidf-440
platform_packages =
    toolchain-esp32s2ulp
    tool-esptoolpy @ https://github.com/jonathandreyer/esptool#release/v3.2
    framework-espidf @ https://github.com/jonathandreyer/framework-espidf.git#espidf-440
board = fujinet-esp32s3
build_type = debug
build_flags =
    ${env.build_flags}
    -D PINMAP_ESP32S3
